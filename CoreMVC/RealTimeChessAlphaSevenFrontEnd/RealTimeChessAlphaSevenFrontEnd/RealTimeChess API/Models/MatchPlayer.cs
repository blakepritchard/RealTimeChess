// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace RealTimeChessAlphaSevenFrontEnd.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    public partial class MatchPlayer
    {
        /// <summary>
        /// Initializes a new instance of the MatchPlayer class.
        /// </summary>
        public MatchPlayer() { }

        /// <summary>
        /// Initializes a new instance of the MatchPlayer class.
        /// </summary>
        public MatchPlayer(int? matchPlayerId = default(int?), int? chessMatchId = default(int?), int? playerId = default(int?), int? playerTypeId = default(int?), bool? isDeleted = default(bool?), DateTime? created = default(DateTime?), DateTime? updated = default(DateTime?), DateTime? deleted = default(DateTime?), IList<Move> moves = default(IList<Move>), IList<ChessPiece> pieces = default(IList<ChessPiece>))
        {
            MatchPlayerId = matchPlayerId;
            ChessMatchId = chessMatchId;
            PlayerId = playerId;
            PlayerTypeId = playerTypeId;
            IsDeleted = isDeleted;
            Created = created;
            Updated = updated;
            Deleted = deleted;
            Moves = moves;
            Pieces = pieces;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "matchPlayerId")]
        public int? MatchPlayerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "chessMatchId")]
        public int? ChessMatchId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playerId")]
        public int? PlayerId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "playerTypeId")]
        public int? PlayerTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isDeleted")]
        public bool? IsDeleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "created")]
        public DateTime? Created { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "updated")]
        public DateTime? Updated { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "deleted")]
        public DateTime? Deleted { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "moves")]
        public IList<Move> Moves { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pieces")]
        public IList<ChessPiece> Pieces { get; set; }

    }
}
